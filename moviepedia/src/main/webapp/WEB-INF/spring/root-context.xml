<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- HikariCP 이용 DB 연결 설정 : bean 태그 이용 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- <property name="driverClassName"
			value="oracle.jdbc.OracleDriver"></property>
		<property name="jdbcUrl"
			value="jdbc:oracle:thin:@localhost:1521:XE"></property> -->
			
		<!-- 4.3 log4jdbc-log4j2 설정 -->
		<property name="driverClassName" value="${hikariConfig.driverClassName}"></property>
		<property name="jdbcUrl" value="${hikariConfig.jdbcUrl}"></property>
		
		<property name="username" value="${hikariConfig.username}"></property>
		<property name="password" value="${hikariConfig.password}"></property>
	</bean>
	
	<!-- dataSource : DB 연결 정보 저장하는 객체 -->
	<!-- HikariCP configuration -> Connection Pool -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" 
		destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>	
	
	<!-- SQLSessionFactory  :  DB연결정보 저장, mybatis 설정, mapper 연결 -->
	<!-- MyBatis의 가장 핵심적 객체. 내부적으로 SQLSession 객체 생성하고 이를 통해 Connection 생성, 원하는 SQL 전달 및 리턴받는 구조로 작성 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		
		<!-- mybatis-config.xml에 대한 정보를 기술함 -->
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>
<!-- 	<bean id="managerService" class="com.moviepedia.service.ManageService"  -->
<!-- 		 init-method="initRegisterMainBoxOfficeList" /> -->
		
	
	<!-- Mapper 인식 위한 설정 -->
	<mybatis-spring:scan base-package="com.moviepedia.mapper"/>
		<!-- base-package 속성 : 지정된 패키지의 모든 MyBatis 관련 어노테이션 찾아 처리 -->	
		
	
	<context:component-scan base-package="com.moviepedia.service"></context:component-scan>
	<context:component-scan base-package="com.moviepedia.security.service"></context:component-scan>
	
	<!-- 18.3 AOP 설정
		-. 자동으로 proxy 객체 만들어주는 설정 추가. 
		-> 네임스페이스에서 aop 및 context 추가 -->
<!-- 	<context:component-scan base-package="com.moviepedia.aop" /> -->
	
	<context:property-placeholder location="classpath:/config/*.properties" />
	
	<!-- Gmail SMTP 전송 관련 Bean 등록
		Spring org.springframework.mail.javamail.JavaMailSenderImpl 이용 -->
	
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="${gmailSmtp.account}" />
		<property name="password" value="${gmailSmtp.password}" />
		
		<property name="javaMailProperties" >
			<props>
			  	<prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- 로그인 실패 시 출력 메세지 커스텀 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/message/security_message</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="5" />
	</bean>
</beans>
